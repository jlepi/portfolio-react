{"ast":null,"code":"var _jsxFileName = \"/Users/jlepiesza/Documents/FSWD/portfolio/src/components/pages/Login.js\";\nimport React, { useState } from 'react';\nimport { Container, Col, Row, Button, Form, FormGroup, Label, Input, Card, CardBody, CardText } from 'reactstrap';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst Login = () => {\n  let history = useHistory();\n  let location = useLocation();\n  const [email, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [auth, setAuth] = useState(true);\n\n  const loginSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch('http://localhost:4000/auth', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const payload = await response.json();\n\n    if (response.status >= 400) {\n      setAuth(false);\n    } else {\n      sessionStorage.setItem('token', payload.token);\n      let {\n        from\n      } = location.state || {\n        from: {\n          pathname: \"/\"\n        }\n      };\n      history.replace(from);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, !auth && /*#__PURE__*/React.createElement(Card, {\n    className: \"text-white bg-primary my-5 py-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardText, {\n    className: \"text-white m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Invalid credentials, please try again\"))), /*#__PURE__*/React.createElement(Form, {\n    className: \"my-5\",\n    onSubmit: loginSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"usernameEntry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"username\",\n    id: \"usernameEntry\",\n    placeholder: \"Username\",\n    value: email,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"passwordEntry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"password\",\n    id: \"passwordEntry\",\n    placeholder: \"Valid password\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Sign in\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/jlepiesza/Documents/FSWD/portfolio/src/components/pages/Login.js"],"names":["React","useState","Container","Col","Row","Button","Form","FormGroup","Label","Input","Card","CardBody","CardText","useHistory","useLocation","Login","history","location","email","setUsername","password","setPassword","auth","setAuth","loginSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","payload","json","status","sessionStorage","setItem","token","from","state","pathname","replace","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4CC,SAA5C,EAAuDC,KAAvD,EAA8DC,KAA9D,EAAqEC,IAArE,EAA2EC,QAA3E,EAAqFC,QAArF,QAAqG,YAArG;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,MAAIC,OAAO,GAAGH,UAAU,EAAxB;AACA,MAAII,QAAQ,GAAGH,WAAW,EAA1B;AACA,QAAM,CAACI,KAAD,EAAQC,WAAR,IAAuBlB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMuB,WAAW,GAAG,MAAMC,KAAN,IAAe;AAE/BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAAD,EAA+B;AACvDC,MAAAA,MAAM,EAAE,MAD+C;AAEvDC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAF8C;AAMvDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACf,QAAAA,KAAD;AAAQE,QAAAA;AAAR,OAAf;AANiD,KAA/B,CAA5B;AAQA,UAAMc,OAAO,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAtB;;AACA,QAAIR,QAAQ,CAACS,MAAT,IAAmB,GAAvB,EAA4B;AACxBb,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAFD,MAEO;AACHc,MAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCJ,OAAO,CAACK,KAAxC;AAEA,UAAI;AAAEC,QAAAA;AAAF,UAAWvB,QAAQ,CAACwB,KAAT,IAAkB;AAAED,QAAAA,IAAI,EAAE;AAAEE,UAAAA,QAAQ,EAAE;AAAZ;AAAR,OAAjC;AACA1B,MAAAA,OAAO,CAAC2B,OAAR,CAAgBH,IAAhB;AACH;AACJ,GApBD;;AAsBA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAAClB,IAAD,iBACG,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,6CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,CADA,CAFJ,eAQA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEE,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,EAAE,EAAC,eAAtC;AAAsD,IAAA,WAAW,EAAC,UAAlE;AAA6E,IAAA,KAAK,EAAEN,KAApF;AAA2F,IAAA,QAAQ,EAAE0B,CAAC,IAAIzB,WAAW,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,eAOE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,EAAE,EAAC,eAA1C;AAA0D,IAAA,WAAW,EAAC,gBAAtE;AAAuF,IAAA,QAAQ,EAAEF,CAAC,IAAIvB,WAAW,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAPF,CADF,eAeE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfF,CARA,CADJ;AA2BH,CAxDD;;AA0DA,eAAe/B,KAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Container, Col, Row, Button, Form, FormGroup, Label, Input, Card, CardBody, CardText } from 'reactstrap'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nconst Login = () => {\n    let history = useHistory();\n    let location = useLocation();\n    const [email, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [auth, setAuth] = useState(true)\n\n    const loginSubmit = async event => {\n        \n        event.preventDefault()\n        const response = await fetch('http://localhost:4000/auth', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify({email, password})\n        })\n        const payload = await response.json()\n        if (response.status >= 400) {\n            setAuth(false)\n        } else {\n            sessionStorage.setItem('token', payload.token)\n\n            let { from } = location.state || { from: { pathname: \"/\" } };\n            history.replace(from);\n        }\n    }\n\n    return (\n        <Container>\n        {!auth && \n            <Card className=\"text-white bg-primary my-5 py-4 text-center\">\n            <CardBody>\n                <CardText className=\"text-white m-0\">Invalid credentials, please try again</CardText>\n            </CardBody>\n        </Card>\n        }\n        <Form className=\"my-5\" onSubmit={loginSubmit}>\n          <Row form>\n            <Col md={6}>\n              <FormGroup>\n                <Label for=\"usernameEntry\">Username</Label>\n                <Input type=\"text\" name=\"username\" id=\"usernameEntry\" placeholder=\"Username\" value={email} onChange={e => setUsername(e.target.value)}/>\n              </FormGroup>\n            </Col>\n            <Col md={6}>\n              <FormGroup>\n                <Label for=\"passwordEntry\">Password</Label>\n                <Input type=\"password\" name=\"password\" id=\"passwordEntry\" placeholder=\"Valid password\" onChange={e => setPassword(e.target.value)}/>\n              </FormGroup>\n            </Col>\n          </Row>\n          <Button color=\"success\">Sign in</Button>\n        </Form></Container>\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}