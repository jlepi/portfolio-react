{"ast":null,"code":"var _jsxFileName = \"/Users/jlepiesza/Documents/FSWD/portfolio-react/src/components/shared/ContactForm.js\";\nimport React, { useState } from 'react';\nimport { Form, FormGroup, Col, Input, Label, Button, Container } from 'reactstrap';\n\nconst ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const formSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch('http://localhost:4000/contact_form/entries', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        phoneNumber,\n        content\n      })\n    });\n    const payload = await response.json();\n\n    if (response.status >= 400) {\n      alert(`Oops! Error: ${payload.message} for fields: ${payload.invalid.join(\",\")}`);\n    } else {\n      alert(`Congrats! Submission submitted with id: ${payload.id}`);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"my-5\",\n    onSubmit: formSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"emailEntry\",\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"emailEntry\",\n    placeholder: \"Enter email to contact\",\n    required: true,\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"phoneEntry\",\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"phone\",\n    name: \"phone\",\n    id: \"phoneEntry\",\n    placeholder: \"Enter phone number\",\n    value: phoneNumber,\n    onChange: e => setPhoneNumber(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"nameEntry\",\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"name\",\n    name: \"name\",\n    id: \"nameEntry\",\n    placeholder: \"Enter your full name\",\n    required: true,\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"messageEntry\",\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Message\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    name: \"text\",\n    id: \"messageEntry\",\n    required: true,\n    value: content,\n    onChange: e => setContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    check: true,\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: {\n      size: 10,\n      offset: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Submit\")))));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/jlepiesza/Documents/FSWD/portfolio-react/src/components/shared/ContactForm.js"],"names":["React","useState","Form","FormGroup","Col","Input","Label","Button","Container","ContactForm","name","setName","email","setEmail","phoneNumber","setPhoneNumber","content","setContent","formSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","payload","json","status","alert","message","invalid","join","id","e","target","value","size","offset"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form, FormGroup, Col, Input, Label, Button, Container} from 'reactstrap'\n\n\n\nconst ContactForm = () => {\n    const [name, setName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [content, setContent] = useState(\"\")\n\n    const formSubmit = async event => {\n        event.preventDefault()\n        const response = await fetch('http://localhost:4000/contact_form/entries', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify({name, email, phoneNumber, content})\n        })\n        const payload = await response.json()\n        if (response.status >= 400) {\n            alert(`Oops! Error: ${payload.message} for fields: ${payload.invalid.join(\",\")}`)\n        } else {\n            alert(`Congrats! Submission submitted with id: ${payload.id}`)\n        }\n    }\n\n    return (\n        <Container>\n            <Form className=\"my-5\" onSubmit={formSubmit}>\n                <FormGroup row>\n                    <Label for=\"emailEntry\" sm={2}>Email</Label>\n                    <Col sm={10}>\n                    <Input type=\"email\" name=\"email\" id=\"emailEntry\" placeholder=\"Enter email to contact\"  required value={email} onChange={e => setEmail(e.target.value) }/>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"phoneEntry\" sm={2}>Phone Number</Label>\n                    <Col sm={10}>\n                    <Input type=\"phone\" name=\"phone\" id=\"phoneEntry\" placeholder=\"Enter phone number\" value={phoneNumber} onChange={e => setPhoneNumber(e.target.value)}/>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"nameEntry\" sm={2}>Full Name</Label>\n                    <Col sm={10}>\n                    <Input type=\"name\" name=\"name\" id=\"nameEntry\" placeholder=\"Enter your full name\" required value={name} onChange={e => setName(e.target.value)}/>\n                    </Col>\n                </FormGroup>\n\n                <FormGroup row>\n                    <Label for=\"messageEntry\" sm={2}>Message</Label>\n                    <Col sm={10}>\n                    <Input type=\"textarea\" name=\"text\" id=\"messageEntry\" required value={content} onChange={e => setContent(e.target.value)}/>\n                    </Col>\n                </FormGroup>\n                <FormGroup check row>\n                    <Col sm={{ size: 10, offset: 2 }}>\n                    <Button color=\"success\">Submit</Button>\n                    </Col>\n                </FormGroup>\n            </Form>\n        </Container>\n      )\n    }\n\n    export default ContactForm;"]},"metadata":{},"sourceType":"module"}